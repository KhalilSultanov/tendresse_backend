# Generated by Django 5.0.4 on 2024-04-22 17:47

import ckeditor.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('preview_photo', models.ImageField(blank=True, upload_to='media/category_photos')),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('hex_color', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ContactForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=1000)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=1000)),
                ('message', models.CharField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='MainBlogPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='media/blog_photos/main_photo/')),
            ],
        ),
        migrations.CreateModel(
            name='MainPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='media/products_photos/main_photo')),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Anonymous', max_length=255)),
                ('email', models.EmailField(default='Anon', max_length=254)),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=0)),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SecondaryBlogPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='media/blog_photos/secondary_photos/')),
            ],
        ),
        migrations.CreateModel(
            name='SecondaryPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, upload_to='media/products_photos/secondary_photos')),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=50)),
                ('description', models.TextField(max_length=100)),
                ('content1', ckeditor.fields.RichTextField(default='')),
                ('content2', ckeditor.fields.RichTextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('main_photo', models.ManyToManyField(to='shop.mainblogphoto')),
                ('secondary_photo', models.ManyToManyField(to='shop.secondaryblogphoto')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('full_name', models.CharField(blank=True, max_length=512)),
                ('title_en', models.CharField(blank=True, max_length=255)),
                ('article', models.CharField(blank=True, max_length=100)),
                ('details', models.TextField(blank=True, max_length=30)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('description_full', ckeditor.fields.RichTextField(default='')),
                ('sale', models.FloatField(blank=True, default=0.0)),
                ('new', models.BooleanField(default=False)),
                ('popular', models.BooleanField(default=False)),
                ('categories', models.ManyToManyField(blank=True, to='shop.category')),
                ('colors', models.ManyToManyField(blank=True, to='shop.color')),
                ('main_photo', models.ManyToManyField(blank=True, to='shop.mainphoto')),
                ('manufacturer', models.ManyToManyField(blank=True, to='shop.manufacturer')),
                ('reviews', models.ManyToManyField(blank=True, to='shop.review')),
                ('secondary_photo', models.ManyToManyField(blank=True, to='shop.secondaryphoto')),
                ('sizes', models.ManyToManyField(blank=True, to='shop.size')),
            ],
        ),
    ]
